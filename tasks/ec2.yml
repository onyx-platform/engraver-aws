---
- name: Create the list of security groups
  set_fact:
    sg: "[{{ onyx_cluster_id }}] {{ item }} Security Group"
  register: sgs
  with_items: "{{ machine_services + ['SSH'] }}"

- name: Set the security group list
  set_fact:
    security_groups:
      "{{ (sgs.results | map(attribute='ansible_facts')) | map(attribute='sg') | list }}"

- name: Launch the EC2 instances
  register: ec2_machines
  ec2:
    aws_access_key: "{{ aws_access_key }}"
    aws_secret_key: "{{ aws_secret_key }}"
    assign_public_ip: yes
    group: "{{ security_groups }}"
    zone: "{{ aws_subnet_az }}"
    region: "{{ aws_region }}"
    key_name: "{{ aws_key_name }}"
    image: "{{ ec2_image_id }}"
    instance_type: "{{ ec2_instance_type }}"
    instance_tags:
      Name: "[{{ onyx_cluster_id }}] {{ profile_id }}"
      ClusterId: "{{ onyx_cluster_id }}"
      ProfileId: "{{ profile_id }}"
    vpc_subnet_id: "{{ vpc_subnet_id }}"
    exact_count: "{{ n_machine_instances }}"
    count_tag:
      Name: "[{{ onyx_cluster_id }}] {{ profile_id }}"
      ClusterId: "{{ onyx_cluster_id }}"
      ProfileId: "{{ profile_id }}"
    wait: yes
    wait_timeout: 300

- name: Wait for SSH on new machines
  wait_for:
    host: "{{ item.public_dns_name }}"
    port: 22
    delay: 0
    timeout: 320
    state: started
  with_items: "{{ ec2_machines.instances | rejectattr('state', 'equalto', 'terminated') | list }}"

- include: populate_inventory.yml
